generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String?    @unique
  password   String?
  avatar     String?
  created_at DateTime   @default(now())
  feedbacks  Feedback[] @relation("UserFeedbacks")
  upvotes     Upvote[]
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  feedbacks   Feedback[] @relation("FeedbackCategory")
}

model Status {
  id          String    @id @default(uuid())
  name        String    @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  feedbacks   Feedback[] @relation("FeedbackStatus")
}

model Feedback {
  id          String   @id @default(uuid())
  title       String
  description String
  category_id String?
  status_id   String?
  author_id   String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  author      User     @relation("UserFeedbacks", fields: [author_id], references: [id])
  category    Category? @relation("FeedbackCategory", fields: [category_id], references: [id])
  status      Status?   @relation("FeedbackStatus", fields: [status_id], references: [id])
  upvotes     Upvote[]
  upvoteCount Int      @default(0)
}

model Upvote {
  id          String    @id @default(uuid())
  user_id     String
  feedback_id String
  user        User      @relation(fields: [user_id], references: [id])
  feedback    Feedback  @relation(fields: [feedback_id], references: [id])

  @@unique([user_id, feedback_id])
}